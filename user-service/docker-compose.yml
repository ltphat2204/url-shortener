services:
  user-service:
    env_file:
      - .env.production
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - url-shortener-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users-service.rule=Host(`localhost`) && PathPrefix(`/users`)"
      - "traefik.http.routers.users-service.entrypoints=web"
      - "traefik.http.middlewares.users-prefix.headers.customrequestheaders.X-Forwarded-Prefix=/users"
      - "traefik.http.routers.users-service.middlewares=users-stripprefix"
      - "traefik.http.middlewares.users-stripprefix.stripprefix.prefixes=/users"
      - "traefik.http.services.users-service.loadbalancer.server.port=8080"
    restart: always

  postgres:
    image: postgres:17-alpine
    restart: always
    networks:
      - url-shortener-net
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d users"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  postgres-data:

networks:
  url-shortener-net:
    external: true